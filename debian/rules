#!/usr/bin/make -f

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


NAME = nagios-wmi-plugin
VERSION = 0.1
CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

unpatch:
	dpatch deapply-all
	rm -rf patch-stamp debian/patched

patch: patch-stamp
patch-stamp:
	dpatch apply-all
	dpatch cat-all >patch-stamp

configure: configure-stamp
configure-stamp: patch-stamp
	dh_testdir
	touch $@

build: build-stamp
build-stamp: configure-stamp
	dh_testdir
	ant jar
	touch $@

clean: clean-patched unpatch
clean-patched: 
	dh_testdir
	dh_testroot
	[ ! -f build.xml ] || ant clean
	dh_clean 

install: build
	install -d  $(CURDIR)/debian/tmp/usr/share/java
	install -d  $(CURDIR)/debian/tmp/usr/bin
	install -m 644 $(CURDIR)/build/lib/$(NAME)-$(VERSION).jar $(CURDIR)/debian/tmp/usr/share/java
	install -m 755 $(CURDIR)/debian/$(NAME).sh $(CURDIR)/debian/tmp/usr/bin/$(NAME)
	dh_testdir
	dh_testroot
	#dh_clean -k
	dh_installdirs
	dh_install --sourcedir=debian/tmp

# Build architecture-dependent files here.
binary-arch: build install

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installchangelogs 
	dh_link
	dh_strip
	dh_compress 
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep

.PHONY: build clean binary-indep binary-arch binary install configure patch
